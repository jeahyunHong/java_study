java Characteristics
기술 진보는 '절망의 성숙'을 통해서 이루어진다. 
자바 이전에도 많은 언어들가 있었다. 이들 선배 언어들은 그 언어가 소속된 시대의 문제를 해결하기 위해서 고안되었다. 
마침내 이들 언어들가 문제를 해결했을 때 이 언어들은 새로운 문제에 직면하게 된다. 
문제들은 점점 처치 곤란한 절망이 되고 그 절망이 충분히 성숙했을 때 비로소 새로운 도약지점이 보이기 시작한다. 
자바라는 언어를 온전하게 이해하기 위해서는 자바 이전 세대의 기술들이 초래한 절망을 이해해야 할 것이다.

하지만 자바는 이제 새로운 언어가 아니다. 주류 언어이자 고전언어의 반열로 추대되는 분위기다. 
자바의 시대가 왔지만, 정작 지금 시점에서 자바를 배우는 사람들은 지금의 자바를 있게 한 그 절망을 경험하지 못한 세대일 가능성이 크다. (최소한 필자가 그렇다.) 
그래서 필자는 지금 이 시점에서 역사적 맥락에서만 파악될 수 있는 자바의 상대적인 특성은 언급하지 않는 것이 좋겠다고 생각했다. 이러한 내용은 자바의 특징 링크를 참고하자. 
또한, 객체지향처럼 단편적인 설명만으로는 오히려 혼란만을 초래할 수 있는 개념도 지금 소개하지 않을 것이다. 
이러한 개념은 구체적인 코드를 보면서 설명해야 불필요하게 철학적으로 빠지지 않는다. 그렇게 빼다보니까 가상머신이 남았다. 
그런데 가상머신의 핵심적인 가치라고 할 수 있는 '동일한 프로그램이 운영체제 가리지 않고 실행된다는 특성'은 C나 C++과 같은 기존의 언어에서는 혁명적인 발상이지만, 
오늘날 대세가 되고 있는 고급언어들(Python, Ruby, PHP, JavaScript)의 관점에서는 그렇게 대단한 것이 아닐 수 있다. 그래서 필자는 지금 자바의 특성을 언급하지 않을 생각이다.
그러고보니까 정작 지금 단계에서 자바의 특징을 이야기 할 것이 남아있지 않다. 차차로 알아가도록 하자. (결론이 좀 이상하다)

출처: 생활코딩
